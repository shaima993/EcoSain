ALGORITHM somme_elements_distincts
VAR
   ens1, ens2 : ARRAY_OF INTEGER[50];
   n1, n2, i, j, somme : INTEGER;
   existe : BOOLEAN;
BEGIN
   somme := 0;

   Write("Donner la taille du premier ensemble :");
   Read(n1);
   FOR i FROM 0 TO n1-1 DO
       Read(ens1[i]);
   END_FOR

   Write("Donner la taille du deuxième ensemble :");
   Read(n2);
   FOR i FROM 0 TO n2-1 DO
       Read(ens2[i]);
   END_FOR

   // Vérifier les éléments de ens1 non présents dans ens2
   FOR i FROM 0 TO n1-1 DO
       existe := FALSE;
       FOR j FROM 0 TO n2-1 DO
           IF ens1[i] = ens2[j] THEN
               existe := TRUE;
               BREAK;
           END_IF
       END_FOR
       IF NOT existe THEN
           somme := somme + ens1[i];
       END_IF
   END_FOR

   // Vérifier les éléments de ens2 non présents dans ens1
   FOR i FROM 0 TO n2-1 DO
       existe := FALSE;
       FOR j FROM 0 TO n1-1 DO
           IF ens2[i] = ens1[j] THEN
               existe := TRUE;
               BREAK;
           END_IF
       END_FOR
       IF NOT existe THEN
           somme := somme + ens2[i];
       END_IF
   END_FOR

   Write("La somme des éléments distincts est : ", somme);
END


<!-- Probleme 2 : dot-product -->

PROCEDURE dot_product(VAR ps : REAL, v1, v2 : ARRAY_OF REAL, n : INTEGER)
VAR
   i : INTEGER;
BEGIN
   ps := 0;
   FOR i FROM 0 TO n-1 DO
       ps := ps + v1[i] * v2[i];
   END_FOR
END
<!-- Probleme 2 : algorithme principale -->
LGORITHM verifier_orthogonalite
VAR
   v1, v2 : ARRAY_OF REAL[50];
   ps : REAL;
   n, i : INTEGER;
BEGIN
   Write("Donner la taille des vecteurs : ");
   Read(n);

   Write("Entrer les éléments du vecteur v1 :");
   FOR i FROM 0 TO n-1 DO
       Read(v1[i]);
   END_FOR

   Write("Entrer les éléments du vecteur v2 :");
   FOR i FROM 0 TO n-1 DO
       Read(v2[i]);
   END_FOR

   CALL dot_product(ps, v1, v2, n);

   IF ps = 0 THEN
       Write("Les vecteurs sont orthogonaux.");
   ELSE
       Write("Les vecteurs ne sont pas orthogonaux.");
   END_IF
END
